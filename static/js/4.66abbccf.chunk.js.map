{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Assets/logo.png","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Assets/Icons/CallEnd.js","Components/Calls/CallSettingsVideoPreview.js","Components/Calls/GroupCallMicAmplitude.js","Utils/Text.js","Components/Calls/GroupCallSettings.js","Assets/Icons/More.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/CallPanel.js","Components/Calls/Call.js","Assets/Icons/Document2.js","Assets/Icons/IDIcon.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Assets/Icons/ExteraV.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacyCalls.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButtonHint.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","module","exports","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","FormHelperText","code","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","sender_id","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","newWindow","window","opener","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","openGameInBrowser","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","Close","on","off","PureComponent","enhance","compose","withSnackbar","CallSettingsVideoPreview","stream","video","document","getElementById","srcObject","autoPlay","muted","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","timer","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","viewBox","fill","strokeWidth","width","copy","navigator","clipboard","writeText","console","copyOld","element","successful","createElement","contentEditable","readOnly","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","GroupCallSettings","onKeyDown","modals","isComposing","openDeviceSelect","handleCloseDeviceSelect","stopPropagation","handleCancel","onUpdateGroupCall","groupCallId","group_call","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","mediaDevices","enumerateDevices","devices","CallStore","outputDeviceId","getOutputDeviceId","filter","kind","deviceId","inputAudioDeviceId","getInputAudioDeviceId","inputAudio","inputVideoDeviceId","getInputVideoDeviceId","inputVideo","handleOutputChange","handleCopyLink","currentGroupCall","username","getChatUsername","telegramUrlOption","handleOpenDeviceSelect","handleSelectDevice","setOutputDeviceId","currentCall","streamManager","inputAudioStream","getAudioTracks","getStream","audio","exact","inputVideoStream","getVideoTracks","handleEnd","call","leaveGroupCall","handleMuteNewParticipants","toggleMuteNewParticipants","handleDone","setInputAudioDeviceId","setInputVideoDeviceId","keyboardHandler","KeyboardHandler","addEventListener","KeyboardManager","add","removeEventListener","remove","closeStreams","callId","outputDeviceInfo","find","outputString","inputAudioDeviceInfo","inputAudioString","inputVideoDeviceInfo","inputVideoString","items","map","canManage","canManageVoiceChats","onMouseDown","Switch","disableRipple","root","switchBase","colorSecondary","track","prevGroupCallId","prevCallId","muteSettings","groupCall","CallPanel","onClientUpdateCallMediaState","currentCallId","mediaState","inputMediaState","outputMediaState","handleUpdateCall","forceUpdate","handleFullScreenChange","fullScreen","isFullScreen","handleClick","handleAccept","p2pAcceptCall","handleDiscard","closeCallPanel","setTimeout","p2pHangUp","handleOpenSettings","handleCloseContextMenu","openSettings","handleCloseSettings","exitFullscreen","handleShareScreen","screenStream","p2pStopScreenSharing","p2pStartScreenSharing","handleFullScreen","requestFullscreen","handleOpenContextMenu","currentTarget","anchorEl","handleAudio","p2pAudioEnabled","handleVideo","videoState","p2pVideoEnabled","callPanelRef","createRef","contextMenu","left","p2pGetMediaState","callPanel","current","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","p2pGet","is_outgoing","screenSharing","outputVideoStyle","isFirefox","transform","videoRotation","classNames","ref","p2pGetCallStatus","Popover","container","getContentAnchorEl","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","onDoubleClick","MicOff","CallEnd","p2pIsCallReady","Mic","Call","onClientUpdateGroupCallFullScreen","fullscreen","closeGroupCallPanel","handleMouseDown","nativeEvent","which","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","onWindowResize","player","oldLeft","oldTop","normalizePosition","startLeft","startTop","setPosition","pipParams","documentElement","clientWidth","clientHeight","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","isExtera","isChatExtera","getChatTitle","ExteraV","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","Chat","onSelect","onTileSelect","showStatus","big","showTitle","showId","isSavedMessages","ChatDetailsHeader","backButton","info","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","ListItemIcon","tabIndex","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","set","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","anchorReference","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","clientX","clientY","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","content","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","overScanCount","SharedMediaContent","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","store","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollBottom","max","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","disableAutoFocusItem","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","fistSliceLoaded","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","getListRef","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","children","Search","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","focused","RadioGroup","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","handleTracker","href","handleGithub","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","logo","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacyCalls","prevAllowCalls","prevAllowP2PCalls","handleChangeAllowCalls","allowCallsValue","handleChangeAllowP2PCalls","allowP2PCallsValue","setSettings","allowCalls","allowP2PCalls","prevAllowCallsValue","rules","added","setting","prevAllowP2PCallsValue","PrivacySecurity","openActiveSessions","openBlockedUsers","openCalls","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","closeCalls","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","input_message_content","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","SCALE_BIG","SCALE_SMALL","SCALE_BIG_MIN","SCALE_SMALL_MIN","FORM_BIG_MAX","FORM_SMALL_MAX","LIGHT_GRADIENT_SIZE","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","radius","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","points","result1","result2","LineBlobDrawable","bottom","pinnedTop","progressToPinned","lineTo","MUTE_BUTTON_STATE_UNMUTE","MUTE_BUTTON_STATE_MUTE","MUTE_BUTTON_STATE_CONNECTING","MUTE_BUTTON_STATE_MUTED_BY_ADMIN","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","handleResize","resizeHandler","resizing","resizeCanvas","invokeDraw","handleBlur","raf","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","alpha","paint1","globalAlpha","setCurrentState","animated","states","matchMedia","setAmplitude","GroupCallTopPanel","onClientUpdateGroupCallAmplitudeChange","amplitudes","topBarRef","onUpdateGroupCallParticipant","group_call_id","participant","getCallStatus","connected","switchButtonState","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","can_unmute_self","changeUserMuted","handleLeave","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","handleStartP2PCall","p2pStartCall","openReportChat","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","reported","canBeReported","called","canBeCalled","p2pCallsEnabled","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","timingFunction","animateOnMount","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","isCall","isCallMessage","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","showMeta","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","unreadCount","getChatUnreadCount","Badge","badgeContent","overlap","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","circleRect","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","Button","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","generateInitBlob","colorsToSet","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButtonHint","GroupCallMicButton","buttonRef","is_muted","GroupCallPanelButtons","GroupCallParticipant","handleOpenProfile","handleSendMessage","handleUnmute","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","prevUserId","participants","GroupCallParticipants","participantsMap","updateParticipants","preloadContent","manageGroupCalls","AddMember","GroupCallSettingsButton","Tune","GroupCallPanel","GroupCall","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateCallPanel","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.66abbccf.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.48f1e1b8.png\";","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(result);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        if (errorMessage === 'PASSWORD_HASH_INVALID') {\n            this.setState({ error: { code: 'InvalidPassword' } });\n            return\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './LeaveVoiceChatDialog.css';\n\nclass LeaveVoiceChatDialog extends React.Component {\n    state = {\n        discard: false\n    };\n\n    handleDiscardChange = () => {\n        const { discard } = this.state;\n\n        this.setState({\n            discard: !discard\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { discard } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.getString('VoipGroupLeaveAlertText')}\n                    </DialogContentText>\n                    <FormControlLabel\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\n                        label={t('VoipGroupEndChat')}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\n                        {t('VoipGroupLeave')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nLeaveVoiceChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { modalManager } from '../../Utils/Modal';\nimport './ReportChatDialog.css';\n\nclass ReportChatDialog extends React.Component {\n\n    handleReport = type => {\n        const { onClose } = this.props;\n\n        onClose && onClose(true, { '@type': type });\n    }\n\n    render() {\n        const { onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\n                <div className='report-chat-dialog-content'>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\n                        <ListItemText primary={t('ReportChatSpam')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\n                        <ListItemText primary={t('ReportChatViolence')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\n                        <ListItemText primary={t('ReportChatPornography')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\n                        <ListItemText primary={t('ReportChatChild')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\n                        <ListItemText primary={t('ReportChatOther')}/>\n                    </ListItem>\n                </div>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('ReportChat')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nReportChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ReportChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport ReportChatDialog from './Popup/ReportChatDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { reportChat } from '../Actions/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport CloseIcon from '../Assets/Icons/Close';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null,\n        leaveVoiceChatAlert: null,\n        reportChatAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    onClientUpdateReportChat = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({ reportChatAlert: { chatId, messageIds }});\n    };\n\n    onClientUpdateBlockSender = update => {\n        const { sender_id } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender: sender_id }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateLeaveVoiceChatAlert = update => {\n        const { params } = update;\n\n        this.setState({ leaveVoiceChatAlert: { params }});\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        const { alert } = this.state;\n        if (!alert) return;\n\n        const { params } = alert;\n        this.setState({ alert: null });\n\n        const { onResult } = params;\n        onResult && onResult(result);\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            event && event.preventDefault();\n\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\n        const { leaveVoiceChatAlert } = this.state;\n\n        this.setState({ leaveVoiceChatAlert: null });\n\n        const { params } = leaveVoiceChatAlert;\n        if (!params) return;\n\n        const { onResult } = params;\n\n        onResult && onResult(resultParams);\n    };\n\n    handleReportChatContinue = (result, params) => {\n        const { t } = this.props;\n        const { reportChatAlert } = this.state;\n\n        this.setState({ reportChatAlert: null });\n        if (!result) return;\n\n        const { chatId, messageIds } = reportChatAlert;\n\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert,\n            leaveVoiceChatAlert,\n            reportChatAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        } else if (leaveVoiceChatAlert) {\n            const { params } = leaveVoiceChatAlert;\n\n            return (\n                <LeaveVoiceChatDialog\n                    params={params}\n                    onClose={this.handleLeaveVoiceChatContinue}/>\n            );\n        } else if (reportChatAlert) {\n            const { chatId, messageIds } = reportChatAlert;\n\n            return (\n                <ReportChatDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleReportChatContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\n    'CallEnd'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './CallSettingsVideoPreview.css';\n\nclass CallSettingsVideoPreview extends React.Component {\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            const video = document.getElementById('call-settings-video');\n            if (video) {\n                video.srcObject = stream;\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            const video = document.getElementById('call-settings-video');\n            if (video) {\n                video.srcObject = stream;\n            }\n        }\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n\n        return (\n            <div>\n                <video id='call-settings-video' autoPlay={true} muted={true}/>\n            </div>\n        );\n    }\n\n}\n\nCallSettingsVideoPreview.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default CallSettingsVideoPreview;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getAmplitude } from '../../Calls/Utils';\nimport './GroupCallMicAmplitude.css';\n\nclass GroupCallMicAmplitude extends React.Component {\n    constructor(props) {\n        super(props);\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.timer = null;\n\n        this.state = {\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.addAnalyser(stream);\n        }\n    }\n\n    componentWillUnmount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.removeAnalyser(stream);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            this.removeAnalyser(prevProps.stream);\n            this.addAnalyser(stream);\n        }\n    }\n\n    addAnalyser(stream) {\n        if (!stream) return;\n\n        const { audioContext } = this;\n        if (!audioContext) return;\n\n        this.streamSource = audioContext.createMediaStreamSource(stream);\n        if (!this.analyser) {\n            const analyser = audioContext.createAnalyser();\n            analyser.minDecibels = -100;\n            analyser.maxDecibels = -30;\n            analyser.smoothingTimeConstant = 0.05;\n            analyser.fftSize = 1024;\n\n            this.analyser = analyser;\n        }\n        this.streamSource.connect(this.analyser);\n\n        this.timer = setInterval(() => this.analyse(), 100);\n    }\n\n    removeAnalyser(stream) {\n        if (!stream) return;\n\n        if (this.analyser && this.streamSource) {\n            this.streamSource.disconnect(this.analyser);\n        }\n\n        clearInterval(this.timer);\n    }\n\n    analyse() {\n        const { analyser } = this;\n        if (!analyser) return;\n\n        const array = new Uint8Array(analyser.frequencyBinCount);\n        analyser.getByteFrequencyData(array);\n        const value = getAmplitude(array, 1.5);\n\n        this.setState({\n            value\n        });\n    }\n\n    render() {\n        const { value } = this.state;\n\n        let d = '';\n        for (let i = 0; i < 35; i++) {\n            const x = i * 8 + 1.5;\n            d += `M${x},0v15Z`;\n        }\n\n        const bars = (\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\n                <path d={d} fill='currentColor' strokeWidth={3}/>\n            </svg>\n        );\n\n        return (\n            <div className='group-call-mic-amplitude'>\n                {bars}\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\n                    {bars}\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallMicAmplitude.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default GroupCallMicAmplitude;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CallSettingsVideoPreview from './CallSettingsVideoPreview';\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport { copy } from '../../Utils/Text';\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\nimport { getStream } from '../../Calls/Utils';\nimport { showSnackbar } from '../../Actions/Client';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport './GroupCallSettings.css';\n\nclass GroupCallSettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = { };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                const { openDeviceSelect } = this.state;\n                if (openDeviceSelect) {\n                    this.handleCloseDeviceSelect();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n\n                this.handleCancel();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId, callId } = props;\n        const { prevGroupCallId, prevCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            let muteSettings = { };\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const {\n                    mute_new_participants: muteNewParticipants,\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n                } = groupCall;\n\n                muteSettings = {\n                    muteNewParticipants,\n                    allowedChangeMuteNewParticipants\n                }\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo,\n                ...muteSettings\n            };\n        } else if (prevCallId !== callId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            return {\n                prevCallId: callId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\n        this.handleSelectDevice('inputVideo', CallStore.getInputVideoDeviceId());\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.add(this.keyboardHandler);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.remove(this.keyboardHandler);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n\n        this.closeStreams();\n    }\n\n    closeStreams() {\n        const { inputAudioStream, inputAudioDeviceId, inputVideoStream, inputVideoDeviceId } = this.state;\n        if (inputAudioStream) {\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputAudioDeviceId === CallStore.getInputAudioDeviceId()) {\n                inputAudioStream.getAudioTracks().forEach(x => {\n                    x.stop();\n                });\n            }\n        }\n\n        if (inputVideoStream) {\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputVideoDeviceId === CallStore.getInputVideoDeviceId()) {\n                inputVideoStream.getVideoTracks().forEach(x => {\n                    x.stop();\n                });\n            }\n        }\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n        if (!group_call) return;\n\n        const {\n            id,\n            mute_new_participants: muteNewParticipants,\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n        } = group_call;\n        if (id !== groupCallId) return;\n\n        this.setState({\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        });\n    };\n\n    onDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        CallStore.devices = devices;\n\n        const outputDeviceId = CallStore.getOutputDeviceId();\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n        this.setState({\n            devices,\n            outputDeviceId,\n            output,\n            inputAudioDeviceId,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo\n        });\n    };\n\n    handleOutputChange = event => {\n        const outputDeviceId = event.target.value;\n\n        this.setState({ outputDeviceId });\n    }\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { currentGroupCall } = CallStore;\n\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    handleOpenDeviceSelect = async type => {\n        switch (type) {\n            case 'inputAudio': {\n                const { inputAudio } = this.state;\n                if (!inputAudio.length) {\n                    return;\n                }\n                break;\n            }\n            case 'output': {\n                const { output } = this.state;\n                if (!output.length) {\n                    return;\n                }\n                break;\n            }\n        }\n\n        this.setState({\n            openDeviceSelect: { type }\n        });\n    };\n\n    handleCloseDeviceSelect = () => {\n        this.setState({\n            openDeviceSelect: null\n        });\n    };\n\n    handleSelectDevice = async (type, deviceId) => {\n        this.handleCloseDeviceSelect();\n\n        switch (type) {\n            case 'output': {\n                CallStore.setOutputDeviceId(deviceId);\n                this.setState({\n                    outputDeviceId: deviceId\n                });\n                break;\n            }\n            case 'inputAudio': {\n                const { currentGroupCall, currentCall } = CallStore;\n                if (currentGroupCall) {\n                    const { streamManager } = currentGroupCall;\n                    if (!streamManager) return;\n\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                    if (inputAudioStream) {\n                        inputAudioStream.getAudioTracks().forEach(t => {\n                            t.stop()\n                        });\n                    }\n\n                    const stream = await getStream({\n                        audio: { deviceId: { exact: deviceId } },\n                        video: false\n                    });\n\n                    this.setState({\n                        inputAudioDeviceId: deviceId,\n                        inputAudioStream: stream\n                    });\n                } else if (currentCall) {\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                    if (inputAudioStream) {\n                        inputAudioStream.getAudioTracks().forEach(t => {\n                            t.stop()\n                        });\n                    }\n\n                    const stream = await getStream({\n                        audio: { deviceId: { exact: deviceId } },\n                        video: false\n                    });\n\n                    this.setState({\n                        inputAudioDeviceId: deviceId,\n                        inputAudioStream: stream\n                    });\n                }\n                break;\n            }\n            case 'inputVideo': {\n                const { currentCall } = CallStore;\n                if (!currentCall) return;\n\n                const { inputVideoStream, inputVideoDeviceId } = this.state;\n\n                if (inputVideoDeviceId === deviceId && inputVideoStream) return;\n\n                if (inputVideoStream) {\n                    inputVideoStream.getVideoTracks().forEach(t => {\n                        t.stop()\n                    });\n                }\n\n                const stream = await getStream({\n                    audio: false,\n                    video: { deviceId: { exact: deviceId } }\n                });\n\n                this.setState({\n                    inputVideoDeviceId: deviceId,\n                    inputVideoStream: stream\n                });\n                break;\n            }\n        }\n    };\n\n    handleEnd = () => {\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\n    };\n\n    handleMuteNewParticipants = () => {\n        const { groupCallId } = this.props;\n        const { muteNewParticipants } = this.state;\n\n        this.setState({\n            muteNewParticipants: !muteNewParticipants\n        });\n\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\n    };\n\n    handleDone = async () => {\n        const { onClose } = this.props;\n        const { inputAudioDeviceId, inputAudioStream, inputVideoDeviceId, inputVideoStream } = this.state;\n\n        if (inputAudioStream && inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\n            await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\n        }\n\n        if (inputVideoStream && inputVideoDeviceId !== CallStore.getInputVideoDeviceId()) {\n            await CallStore.setInputVideoDeviceId(inputVideoDeviceId, inputVideoStream);\n        }\n\n        onClose && onClose();\n    };\n\n    handleCancel = () => {\n        const { onClose } = this.props;\n\n        onClose && onClose();\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const {\n            inputAudioDeviceId,\n            inputAudioStream,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideoStream,\n            inputVideo,\n            outputDeviceId,\n            output,\n            openDeviceSelect,\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        } = this.state;\n\n\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\n\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\n\n        const inputVideoDeviceInfo = inputVideo.find(x => x.deviceId === inputVideoDeviceId || !inputVideoDeviceId && x.deviceId === 'default');\n        const inputVideoString = !inputVideoDeviceInfo || inputVideoDeviceInfo.deviceId === 'default' || !inputVideoDeviceInfo.deviceId || !inputVideoDeviceInfo.label ? t('Default') : inputVideoDeviceInfo.label;\n\n        const { currentGroupCall } = CallStore;\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\n\n        const username = getChatUsername(chatId);\n\n        if (openDeviceSelect) {\n            const { type } = openDeviceSelect;\n            let items = [];\n            let deviceId = null;\n            switch (type) {\n                case 'output': {\n                    items = output;\n                    deviceId = outputDeviceId;\n                    break;\n                }\n                case 'inputAudio': {\n                    items = inputAudio;\n                    deviceId = inputAudioDeviceId;\n                    break;\n                }\n                case 'inputVideo': {\n                    items = inputVideo;\n                    deviceId = inputVideoDeviceId;\n                    break;\n                }\n            }\n\n            return (\n                <div className='group-call-settings-device-select'>\n                    <div className='group-call-settings-panel'>\n                        <div className='group-call-settings-panel-header'>\n                            <div className='group-call-panel-caption'>\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\n                            </div>\n                        </div>\n                        <div className='group-call-settings-panel-content'>\n                            {items.map(x => (\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\n                                </div>\n                            ))}\n                        </div>\n                        <div className='group-call-settings-panel-buttons'>\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\n                                {t('OK')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\n\n        const canManage = canManageVoiceChats(chatId);\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\n\n        return (\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\n                    <div className='group-call-settings-panel-header'>\n                        <div className='group-call-panel-caption'>\n                            <div className='group-call-title'>{t('Settings')}</div>\n                        </div>\n                    </div>\n                    <div className='group-call-settings-panel-content'>\n                        { canManage && allowedChangeMuteNewParticipants && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\n                                <Switch\n                                    disableRipple\n                                    classes={{\n                                        root: 'group-call-settings-panel-switch-root',\n                                        switchBase: 'group-call-settings-panel-switch-base',\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\n                                        checked: 'group-call-settings-panel-switch-checked',\n                                        track: 'group-call-settings-panel-switch-track'\n                                    }}\n                                    checked={muteNewParticipants}\n                                    onChange={this.handleMuteNewParticipants}/>\n                            </div>\n                        )}\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\n                        </div>\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\n                        </div>\n\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\n\n                        { callId && (\n                            <>\n                                <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputVideo')}>\n                                    <div className='group-call-settings-panel-item-title'>{t('Camera')}</div>\n                                    <div className='group-call-settings-panel-item-subtitle'>{inputVideoString}</div>\n                                </div>\n                                <CallSettingsVideoPreview stream={inputVideoStream}/>\n                                {/*<div>*/}\n                                {/*    <video id='call-settings-video' autoPlay={true} muted={true}/>*/}\n                                {/*</div>*/}\n                            </>\n                        )}\n                        { username && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\n                                {t('VoipGroupCopyInviteLink')}\n                            </div>\n                        )}\n                        { canManage && (\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\n                                {t('VoipGroupEndChat')}\n                            </div>\n                        )}\n                    </div>\n                    <div className='group-call-settings-panel-buttons'>\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\n                            {t('Done')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallSettings.propTypes = {\n    callId: PropTypes.number,\n    groupCallId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallSettings);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\n    'Mic'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\n    'MicOff'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CallIcon from '@material-ui/icons/Call';\nimport VideocamIcon from '@material-ui/icons/VideocamOutlined';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffOutlined';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallSettings from './GroupCallSettings';\nimport MenuIcon from '../../Assets/Icons/More';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { closeCallPanel } from '../../Actions/Call';\nimport { isFirefox } from '../../Calls/P2P/P2PSdpBuilder';\nimport { p2pGetCallStatus, p2pIsCallReady } from '../../Calls/Utils';\nimport { getUserFullName } from '../../Utils/User';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './CallPanel.css';\n\nconst SUPPORTS_ROTATION = true;\n\nclass CallPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.callPanelRef = React.createRef();\n\n        const { callId } = props;\n\n        this.state = {\n            openSettings: false,\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            fullScreen: false,\n\n            inputMediaState: CallStore.p2pGetMediaState(callId, 'input'),\n            outputMediaState: CallStore.p2pGetMediaState(callId, 'output')\n        };\n    }\n\n    componentDidMount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.addEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.on('updateCall', this.handleUpdateCall);\n        CallStore.on('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\n    }\n\n    componentWillUnmount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.removeEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.off('updateCall', this.handleUpdateCall);\n        CallStore.off('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\n    }\n\n    onClientUpdateCallMediaState = update => {\n        const { callId: currentCallId } = this.props;\n        const { callId, mediaState, type } = update;\n        if (callId !== currentCallId) return;\n\n        if (type === 'input') {\n            this.setState({ inputMediaState: mediaState });\n        } else {\n            this.setState({ outputMediaState: mediaState });\n        }\n    };\n\n    handleUpdateCall = update => {\n        this.forceUpdate();\n    };\n\n    handleFullScreenChange = () => {\n        this.setState({\n            fullScreen: this.isFullScreen()\n        });\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleAccept = async event => {\n        event.stopPropagation();\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        await CallStore.p2pAcceptCall(callId);\n    };\n\n    handleDiscard = async event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        closeCallPanel();\n        setTimeout(() => {\n            CallStore.p2pHangUp(callId, true);\n        }, 100);\n    };\n\n    handleOpenSettings = async event => {\n        this.handleCloseContextMenu();\n\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        if (this.isFullScreen()) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.handleDiscard(null);\n    };\n\n    handleShareScreen = () => {\n        this.handleCloseContextMenu();\n\n        const { currentCall } = CallStore;\n        if (!currentCall) return;\n\n        const { screenStream } = currentCall;\n        if (screenStream) {\n            CallStore.p2pStopScreenSharing();\n        } else {\n            CallStore.p2pStartScreenSharing();\n        }\n    };\n\n    handleFullScreen = () => {\n        this.handleCloseContextMenu();\n\n        setTimeout(() => {\n            if (this.isFullScreen()) {\n                this.exitFullscreen();\n                return;\n            }\n\n            this.requestFullscreen();\n        }, 250);\n    }\n\n    isFullScreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        return fullscreenElement === callPanel;\n    }\n\n    requestFullscreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const method = callPanel.requestFullscreen || callPanel.mozRequestFullScreen || callPanel.webkitRequestFullscreen;\n\n        method && method.call(callPanel);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { currentTarget } = event;\n\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { anchorEl } = this.state;\n\n        if (anchorEl) {\n            this.setState({ anchorEl: null });\n        } else {\n            this.setState({\n                anchorEl: currentTarget\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleAudio = () => {\n        const { inputMediaState } = this.state;\n        if (!inputMediaState) return;\n\n        const { muted } = inputMediaState;\n\n        CallStore.p2pAudioEnabled(muted);\n    };\n\n    handleVideo = () => {\n        const { inputMediaState } = this.state;\n        if (!inputMediaState) return;\n\n        const muted = inputMediaState.videoState === 'inactive';\n\n        CallStore.p2pVideoEnabled(muted)\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const { openSettings, anchorEl, fullScreen, inputMediaState, outputMediaState } = this.state;\n        const { currentCall } = CallStore;\n\n        const call = CallStore.p2pGet(callId);\n        if (!call) return null;\n\n        const { user_id: userId, is_outgoing, state } = call;\n\n        let screenSharing = currentCall && Boolean(currentCall.screenStream);\n\n        let outputVideoStyle = null;\n        if (SUPPORTS_ROTATION && outputMediaState && isFirefox() && !is_outgoing) {\n            outputVideoStyle = {\n                transform: `rotate(${outputMediaState.videoRotation}deg)`\n            };\n        }\n\n        return (\n            <div className={classNames('group-call-panel', { 'full-screen': fullScreen })} ref={this.callPanelRef}>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption' onMouseDown={stopPropagation} onClick={stopPropagation}>\n                        <div className='group-call-title'>{getUserFullName(userId, null)}</div>\n                        <div className='group-call-join-panel-subtitle'>\n                            {p2pGetCallStatus(callId)}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleOpenContextMenu}>\n                        <MenuIcon />\n                    </div>\n                    <Popover\n                        container={this.callPanelRef.current}\n                        classes={{\n                            paper: 'group-call-participant-menu-root'\n                        }}\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={this.handleCloseContextMenu}\n                        getContentAnchorEl={null}\n                        disableRestoreFocus={true}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleOpenSettings}>\n                                <ListItemText primary={t('Settings')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleFullScreen}>\n                                <ListItemText primary={fullScreen ? t('ExitFullScreen') : t('EnterFullScreen')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleShareScreen}>\n                                <ListItemText primary={screenSharing ? t('StopScreenSharing') : t('StartScreenSharing')} />\n                            </MenuItem>\n                        </MenuList>\n                    </Popover>\n                </div>\n                <div className='call-panel-content scrollbars-hidden' onDoubleClick={this.handleFullScreen}>\n                    <video id='call-output-video' style={outputVideoStyle} className={outputMediaState && outputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={false}/>\n                    <video id='call-input-video' className={inputMediaState && inputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={true}/>\n                </div>\n                { outputMediaState && outputMediaState.muted && (\n                    <div className='call-panel-microphone-hint'>\n                        <div className='call-panel-microphone-hint-wrapper'>\n                            <MicOffIcon/>\n                            <div className='call-panel-microphone-hint-text'>\n                                {LStore.formatString('VoipUserMicrophoneIsOff', getUserFullName(userId, null))}\n                            </div>\n                        </div>\n                    </div>\n                )}\n                <div className='group-call-panel-buttons'>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleVideo}>\n                            {inputMediaState && inputMediaState.videoState === 'active' ? <VideocamIcon/> : <VideocamOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {inputMediaState && inputMediaState.videoState === 'active' ? t('VoipStopVideo') : t('VoipStartVideo')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleDiscard}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {(p2pIsCallReady(callId) || is_outgoing) ? t('VoipEndCall') : t('VoipDeclineCall')}\n                        </div>\n                    </div>\n                    {!is_outgoing && state['@type'] === 'callStatePending' && (\n                        <div className='group-call-panel-button'>\n                            <div className='group-call-panel-button-answer' onMouseDown={stopPropagation} onClick={this.handleAccept}>\n                                <CallIcon />\n                            </div>\n                            <div className='group-call-panel-button-text'>\n                                {t('VoipAnswerCall')}\n                            </div>\n                        </div>\n                    )}\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleAudio}>\n                            {inputMediaState && !inputMediaState.muted ? <MicIcon/> : <MicOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {inputMediaState && !inputMediaState.muted ? t('Mute') : t('Unmute')}\n                        </div>\n                    </div>\n                </div>\n                {openSettings && <GroupCallSettings callId={callId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nCallPanel.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default withTranslation()(CallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CallPanel from './CallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass Call extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { callId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <CallPanel callId={callId}/>\n            </div>\n        )\n    }\n}\n\nCall.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default Call;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M2.873 11.297V4.142H1.699L0 5.379v1.137l1.64-1.18h.06v5.961h1.174Zm3.213-5.09v-.063c0-.618.44-1.169 1.196-1.169.676 0 1.174.44 1.174 1.106 0 .624-.42 1.101-.807 1.526L4.99 10.553v.744h4.78v-.99H6.643v-.069L8.41 8.252c.65-.724 1.237-1.332 1.237-2.27C9.646 4.849 8.723 4 7.308 4c-1.573 0-2.36 1.064-2.36 2.15v.057h1.138Zm6.559 1.883h.786c.823 0 1.374.481 1.379 1.179.01.707-.55 1.216-1.421 1.21-.77-.005-1.326-.419-1.379-.953h-1.095c.042 1.053.938 1.918 2.464 1.918 1.478 0 2.642-.839 2.62-2.144-.02-1.143-.922-1.651-1.551-1.714v-.063c.535-.09 1.347-.66 1.326-1.678-.026-1.053-.933-1.855-2.359-1.845-1.5.005-2.317.88-2.348 1.898h1.116c.032-.498.498-.944 1.206-.944.703 0 1.206.435 1.206 1.07.005.64-.504 1.106-1.2 1.106h-.75v.96Z\"/>,\n    'IDIcon'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","import React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M16.9111,22.4112C18.3337,18.2655 20.5744,11.6869 21.7181,8.0757C21.9877,7.2247 21.9454,6.317 21.3105,5.7242C20.689,5.1438 19.7834,5.1356 18.9482,5.4113L4.9006,10.048C3.9411,10.3647 3.5609,11.2824 3.569,12.0522C3.5771,12.8197 3.9666,13.7134 4.8593,14.0806C6.595,14.7945 8.4823,15.8148 9.8043,17.1836C11.1988,18.6274 12.2492,20.6444 12.9776,22.4314C13.3338,23.3054 14.1926,23.7017 14.9487,23.7127C15.7086,23.7237 16.5916,23.3424 16.9111,22.4112Z\" />,\n    'ExteraV'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport ExteraV from '../../Assets/Icons/ExteraV';\nimport { getChatTitle, isChatVerified, isChatExtera } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const isExtera = isChatExtera(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n                {isExtera && <ExteraV className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle, showId } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showId && (\n                                <div className='tile-second-row'>\n                                    ID: {chatId}\n                                </div>\n                            )}\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender_id} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport IDIcon from '../../Assets/Icons/IDIcon';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\nimport FingerprintRoundedIcon from '@material-ui/icons/FingerprintRounded';\n\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                \n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {chatId && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <FingerprintRoundedIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={chatId}\n                                            secondary={isPrivateChat(chatId) ? 'ID' : 'ID'}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {isPrivateChat(chatId) && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\n                                                </Typography>\n                                            }\n                                            secondary={t('Phone')}\n                                        />\n                                    </ListItem>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_id } = last_message;\n        if (sender_id.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId, t);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    onUpdateMessageSendAcknowledged = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ sendingState: null });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === 0) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n\nexport function scrollBottom(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\n\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\n    setTimeout(() => {\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport {\n    STORAGE_CACHE_KEY,\n    STORAGE_CACHE_TEST_KEY,\n    STORAGE_CONTACTS_KEY,\n    STORAGE_CONTACTS_TEST_KEY,\n    STORAGE_FILES_KEY,\n    STORAGE_FILES_TEST_KEY,\n    STORAGE_FILTERS_KEY,\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\n} from '../Constants';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        const { useTestDC } = TdLibController.parameters;\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000, {\n            leading: false,\n            trailing: true\n        });\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove(this.cacheKey);\n                        CacheManager.remove(this.filesKey);\n                        if (this.cacheContacts) {\n                            CacheManager.remove(this.contactsKey);\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        const promises = [];\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n        // console.log('[f] cache.load', files);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[f] cache.parse', cache.files);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_id } = last_message;\n                switch (sender_id['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender_id.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender_id.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        // console.log('[cm] save');\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal');\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save(this.cacheKey, cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        const results = await Promise.all(promises);\n        await CacheManager.save(this.filesKey, results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save(this.contactsKey, contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save(this.filtersKey, this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\n\n        Promise.all(promises);\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport Check from '../../Assets/Icons/Check';\nimport Delete from '../../Assets/Icons/Delete';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport { openSupportChat } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n\n        openSupportChat();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div className='search-input-wrapper'>\n                    {showIcon && <SearchIcon className='search-input-icon' />}\n                    <div\n                        id='search-inputbox'\n                        ref={inputRef}\n                        placeholder={hint || t('Search')}\n                        contentEditable\n                        suppressContentEditableWarning\n                        onKeyDown={this.handleKeyDown}\n                        onKeyUp={this.handleKeyUp}\n                        onPaste={this.handlePaste}\n                        onInput={this.handleInput}\n                        onFocus={onFocus}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map((x) => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>\n                    ))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        return;\n\n        // console.log('[vl] onScroll');\n        if (this.stub) return;\n\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            limit: 300\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source, stub = false) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        if (stub) {\n            return <DialogPlaceholder key={index} index={index} />\n        }\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        this.source = [];\n        this.stub = false;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                this.source = Array.from(Array(10));\n                this.stub = true;\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    cacheItems: PropTypes.array,\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_id.user_id && chatSearch ? (\n                <UserTile userId={sender_id.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\n\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_id.user_id) {\n                users.set(messages.messages[i].sender_id.user_id, messages.messages[i].sender_id.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender_id } = message;\n                if (sender_id && sender_id.user_id) {\n                    users.set(sender_id.user_id, sender_id.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_id.user_id) {\n                users.set(result.messages[i].sender_id.user_id, result.messages[i].sender_id.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport Delete from '../../../Assets/Icons/Delete';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                            showId={true}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('ExteraSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current.cropper;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\nimport { scrollBottom } from '../../../Utils/DOM';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\n        try {\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\n            type = themeOptions.type;\n            primary = themeOptions.primary;\n        } catch {}\n\n        this.state = {\n            open: false,\n            type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        const type = event.target.value;\n\n        this.setState({ type });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                disableEnforceFocus={true}\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label={t('SystemDefault')} />\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label={t('Light')} />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label={t('Dark')} />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label={t('Red')}\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label={t('Orange')}\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label={t('Amber')}\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label={t('Green')}\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label={t('Blue')}\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label={t('Indigo')}\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label={t('DeepPurple')}\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { isMacOS } from '../../../Utils/Common';\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\nimport '../../Tile/Chat.css';\nimport '../../Tile/ChatTile.css';\nimport ExteraV from '../../../Assets/Icons/ExteraV';\nimport classNames from 'classnames';\nimport Check from '../../../Assets/Icons/Check';\nimport Delete from '../../../Assets/Icons/Delete';\nimport logo from '../../../Assets/logo.png'\nimport packageJson from '../../../../package.json'\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false,\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n    handleTracker = () => {\n        let a = document.createElement('a');\n        a.target=\"_blank\";\n        a.href='https://github.com/exterasquad/exteraweb/issues';\n        a.click();\n    };\n\n    handleGithub = () => {\n\n        let a = document.createElement('a');\n        a.target=\"_blank\";\n        a.href='https://github.com/exterasquad/exteraweb';\n        a.click();\n    };\n\n    async handleSetOption(command) {\n        let value = false;\n        switch (command) {\n            case 'sendByCtrlEnter': {\n                value = true;\n                break;\n            }\n            case 'sendByEnter': {\n                value = false;\n                break;\n            }\n        }\n\n        await TdLibController.send({\n            '@type': 'setOption',\n            name: SEND_BY_CTRL_ENTER_KEY,\n            value: { '@type': 'optionValueBoolean', value }\n        });\n\n        this.setState({\n            sendByCtrlEnter: value\n        });\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ExteraSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <div className={classNames('chat', { 'chat-big': true })}>\n                            <div className='chat-wrapper'>\n                                    <div\n                                    className={classNames(\n                                        'chat-tile',\n                                        { 'tile-big': true }\n                                    )}\n                                    style={null}>\n                                        <img className='tile-photo' src={logo} />\n                                    </div>\n                                    <div className='chat-inner-wrapper'>\n                                        <div className='tile-first-row'>\n                                            <div className='dialog-title'>\n                                                <span className='dialog-title-span'>exteraWeb | v{packageJson.version}</span>\n                                                \n                                            </div>\n                                        </div>\n                                        <div className='tile-second-row'>\n                                            {t('exteraInfo')}\n                                        </div>\n                                    </div>\n                            </div>\n                        </div>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleGithub}>\n                            <ListItemIcon>\n                                <Delete />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Source')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleTracker}>\n                            <ListItemIcon>\n                                <Check />\n                            </ListItemIcon>\n                            <ListItemText primary={t('BugTracker')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Theme')} />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={!sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('SendByEnter')}\n                                secondary={t('NewLineByShiftEnter')}\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\n                                secondary={t('NewLineByEnter')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SectionHeader from '../SectionHeader';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacyCalls.css';\n\nclass PrivacyCalls extends React.Component {\n    state = {\n        prevAllowCalls: null,\n        prevAllowP2PCalls: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { allowCalls, allowP2PCalls } = props;\n        const { prevAllowCalls, prevAllowP2PCalls } = state;\n        if (allowCalls !== prevAllowCalls || allowP2PCalls !== prevAllowP2PCalls) {\n            const allowCallsValue = allowCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            const allowP2PCallsValue = allowP2PCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            return {\n                prevAllowCalls: allowCalls,\n                prevAllowP2PCalls: allowP2PCalls,\n                allowCallsValue: allowCallsValue ? allowCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll',\n                allowP2PCallsValue: allowP2PCallsValue ? allowP2PCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll'\n            }\n        }\n\n        return null;\n    }\n\n    componentWillUnmount() {\n        this.setSettings();\n    }\n\n    setSettings() {\n        const { allowCalls, allowP2PCalls } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        const prevAllowCallsValue = allowCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowCallsValue || allowCallsValue !== prevAllowCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowCalls' },\n                rules\n            });\n        }\n\n        const prevAllowP2PCallsValue = allowP2PCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowP2PCallsValue || allowP2PCallsValue !== prevAllowP2PCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowP2PCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowP2PCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowP2PCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowP2PCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' },\n                rules\n            });\n        }\n    }\n\n    handleChangeAllowCalls = event => {\n        this.setState({\n            allowCallsValue: event.currentTarget.value\n        });\n    };\n\n    handleChangeAllowP2PCalls = event => {\n        this.setState({\n            allowP2PCallsValue: event.currentTarget.value\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Calls')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('WhoCanCallMe')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowCallsValue} onChange={this.handleChangeAllowCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n\n                        <SectionHeader>{t('PrivacyP2P')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowP2PCallsValue} onChange={this.handleChangeAllowP2PCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nPrivacyCalls.propTypes = {\n    allowCalls: PropTypes.object.isRequired,\n    allowP2PCalls: PropTypes.object.isRequired,\n};\n\nexport default withTranslation()(PrivacyCalls);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\nimport PrivacyCalls from './PrivacyCalls';\nimport { CallOutlined } from '@material-ui/icons';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        openActiveSessions: false,\n\n        users: null,\n        openBlockedUsers: false,\n\n        allowCalls: null,\n        allowP2PCalls: null,\n        openCalls: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowCalls' }\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' }\n        }).catch(() => null));\n\n        const [ sessions, users, allowCalls, allowP2PCalls ] = await Promise.all(promises);\n\n        this.setState({\n            sessions,\n            users,\n            allowCalls,\n            allowP2PCalls\n        });\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    openCalls = () => {\n        const { allowCalls, allowP2PCalls } = this.state;\n        if (!allowCalls || !allowP2PCalls) return;\n\n        this.setState({\n            openCalls: true\n        });\n    };\n\n    closeCalls = () => {\n        this.setState({\n            openCalls: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const {\n            openBlockedUsers, users,\n            openActiveSessions, sessions,\n            openCalls, allowCalls, allowP2PCalls\n        } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openCalls}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('Calls')}\n                                secondary={''}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n                <SidebarPage open={openCalls} onClose={this.closeCalls}>\n                    <PrivacyCalls allowCalls={allowCalls} allowP2PCalls={allowP2PCalls} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile || defaultPhoto) {\n            const photo = defaultPhotoFile\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputChatPhotoStatic', photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\nimport { scrollBottom } from '../../Utils/DOM';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile || defaultPhoto) {\n                const photo = defaultPhotoFile\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        {/*<UpdatePanel />*/}\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter+cmd, enter+ctrl\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                } else {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const MAX_SPEED = 8.2;\nexport const MIN_SPEED = 0.8;\nexport const AMPLITUDE_SPEED = 0.33;\n\nexport const SCALE_BIG = 0.807;\nexport const SCALE_SMALL = 0.704;\n\nexport const SCALE_BIG_MIN = 0.878;\nexport const SCALE_SMALL_MIN = 0.926;\n\nexport const FORM_BIG_MAX = 0.6;\nexport const FORM_SMALL_MAX = 0.6;\n\nexport const GLOBAL_SCALE = 1;\n\nexport const FORM_BUTTON_MAX = 0;\n\nexport const GRADIENT_SPEED_MIN = 0.5;\nexport const GRADIENT_SPEED_MAX = 0.01;\n\nexport const LIGHT_GRADIENT_SIZE = 0.5;\n\nfunction rotateZ(x, y, angle, originX, originY) {\n    x -= originX;\n    y -= originY;\n\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\n\n    x = X + originX;\n    y = Y + originY;\n\n    return [x, y];\n}\n\nexport default class BlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.cubicBezierK = 1.0;\n        this.N = n;\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\n        this.radius = new Array(n);\n        this.angle = new Array(n);\n\n        this.radiusNext = new Array(n);\n        this.angleNext = new Array(n);\n        this.progress = new Array(n);\n        this.speed = new Array(n);\n\n        this.pointStart = new Array(4);\n        this.pointEnd = new Array(4);\n\n        for (let i = 0; i < this.N; i++) {\n            this.generateBlob(this.radius, this.angle, i);\n            this.generateBlob(this.radiusNext, this.angleNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, angle, i) {\n        const { maxRadius, minRadius, speed, N } = this;\n\n        const angleDif = 2 * Math.PI / N * 0.05;\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\n        for (let i = 0; i < N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                angle[i] = angleNext[i];\n                this.generateBlob(radiusNext, angleNext, i);\n            }\n        }\n    }\n\n    draw(cX, cY, canvas, paint) {\n        // console.log('[bd] draw', cX, cY, canvas, paint);\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\n\n            for (let i = 0; i < N; i++) {\n                const progress = this.progress[i];\n                const nextIndex = i + 1 < N ? i + 1 : 0;\n                const progressNext = this.progress[nextIndex];\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\n\n                pointStart[0] = cX;\n                pointStart[1] = cY - r1;\n                pointStart[2] = cX + l;\n                pointStart[3] = cY - r1;\n\n                this.mapPoints(pointStart, cX, cY, angle1);\n\n                pointEnd[0] = cX;\n                pointEnd[1] = cY - r2;\n                pointEnd[2] = cX - l;\n                pointEnd[3] = cY - r2;\n\n                this.mapPoints(pointEnd, cX, cY, angle2);\n\n                if (i === 0) {\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\n                    ctx.moveTo(pointStart[0], pointStart[1]);\n                }\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\n                ctx.bezierCurveTo(\n                    pointStart[2], pointStart[3],\n                    pointEnd[2], pointEnd[3],\n                    pointEnd[0], pointEnd[1]\n                );\n            }\n\n            // ctx.scale(1.0, 1.0);\n            // this.fillStyleFunc(ctx);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n\n    mapPoints(points, cX, cY, angle) {\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\n\n        points[0] = result1[0];\n        points[1] = result1[1];\n        points[2] = result2[0];\n        points[3] = result2[1];\n    }\n\n    generateInitBlob() {\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\n\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, angle, i);\n            this.generateBlob(radiusNext, angleNext, i);\n            progress[i] = 0;\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// const MIN_SPEED = 0.8;\n// const MAX_SPEED = 8.2;\n\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\n\nexport default class LineBlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.N = n;\n        this.radius = new Array(n + 1);\n\n        this.radiusNext = new Array(n + 1);\n        this.progress = new Array(n + 1);\n        this.speed = new Array(n + 1);\n\n        for (let i = 0; i <= n; i++) {\n            this.generateBlob(this.radius, i);\n            this.generateBlob(this.radiusNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, i) {\n        const { maxRadius, minRadius, speed } = this;\n\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    generateNextBlob() {\n        const { radius, radiusNext, progress, N } = this;\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, i);\n            this.generateBlob(radiusNext, i);\n            progress[i] = 0.0;\n        }\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext } = this;\n        for (let i = 0; i <= N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                this.generateBlob(radiusNext, i);\n            }\n        }\n    }\n\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n            ctx.moveTo(right, bottom);\n            ctx.lineTo(left, bottom);\n\n            const { radius, radiusNext, N } = this;\n            for (let i = 0; i <= N; i++) {\n                if (i === 0) {\n                    const progress = this.progress[i];\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.lineTo(left, y);\n                } else {\n                    const progress = this.progress[i - 1];\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\n                    const progressNext = this.progress[i];\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\n                    const x1 = (right - left) / N * (i - 1);\n                    const x2 = (right - left) / N * i;\n                    const cx = x1 + (x2 - x1) / 2;\n\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.bezierCurveTo(\n                        cx, y1,\n                        cx, y2,\n                        x2, y2\n                    );\n                    if (i === N) {\n                        ctx.lineTo(right, bottom);\n                    }\n                }\n            }\n\n            // ctx.scale(1.0, 1.0);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LineBlobDrawable from './LineBlobDrawable';\n\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\nexport const MUTE_BUTTON_STATE_MUTE = 1;\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\n\nexport class WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.6, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            gradient.addColorStop(0, '#00B1C0');\n            gradient.addColorStop(1, '#52CE5D');\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            gradient.addColorStop(0, '#2BCEFF');\n            gradient.addColorStop(1, '#0976E3');\n        } else {\n            gradient.addColorStop(0, '#8599aa');\n            gradient.addColorStop(1, '#8599aa');\n        }\n\n        return gradient;\n    }\n\n    update(height, width, dt, amplitude) {\n        // TODO: move gradient here\n    }\n}\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.resizing = false;\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n        this.amplitude2 = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.prevState = null;\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\n        this.progressToState = 1.0;\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.right = 1260 * this.scale;\n        this.bottom = 63 * this.scale;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        window.addEventListener('resize', this.handleResize);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n        const topBar = document.getElementById('top-bar');\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n\n        this.canvas = document.getElementById('canvas');\n        this.lbd = new LineBlobDrawable(3);\n        this.lbd1 = new LineBlobDrawable(7);\n        this.lbd2 = new LineBlobDrawable(8);\n        this.setAmplitude(this.amplitude);\n\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        window.removeEventListener('resize', this.handleResize);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.bottom = 63 * this.scale;\n\n        const topBar = document.getElementById('top-bar');\n        if (!topBar) return;\n\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n    }\n\n    handleResize = () => {\n        if (this.resizeHandler) {\n            clearTimeout(this.resizeHandler);\n            this.resizeHandler = null;\n        }\n\n        this.resizing = true;\n        this.resizeCanvas();\n        this.resizeHandler = setTimeout(() => {\n            this.resizing = false;\n            this.invokeDraw();\n        }, 250);\n    }\n\n    resizeCanvas() {\n        const topBar = document.getElementById('top-bar');\n\n        this.scale = window.devicePixelRatio;\n        this.right = topBar.offsetWidth * this.scale;\n\n        this.forceUpdate();\n        this.invokeDraw();\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\n        if (!focused && !resizing && this.progressToState >= 1.0) {\n            return;\n        }\n\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude += this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (this.animateToAmplitude !== this.amplitude2) {\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\n            if (this.animateAmplitudeDiff2 > 0) {\n                if (this.amplitude2 > this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude2 < this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (previousState) {\n            this.progressToState += dt / 250;\n            if (this.progressToState > 1) {\n                this.progressToState = 1;\n                this.previousState = null;\n            }\n        }\n\n        const top1 = 6 * this.amplitude2 * scale;\n        const top2 = 6 * this.amplitude2 * scale;\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        lbd.minRadius = 0;\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\n        lbd1.minRadius = 0;\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\n        lbd2.minRadius = 0;\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\n\n        lbd.update(this.amplitude, 0.3);\n        lbd1.update(this.amplitude, 0.7);\n        lbd2.update(this.amplitude, 0.7);\n\n        for (let i = 0; i < 2; i++) {\n            if (i === 0 && !previousState) {\n                continue;\n            }\n\n            let alpha = 1;\n            let state = null;\n            if (i === 0) {\n                alpha = 1 - this.progressToState;\n                state = previousState;\n                // previousState.setToPaint(paint);\n            } else {\n                alpha = previousState ? this.progressToState : 1;\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\n                state = currentState;\n                // currentState.setToPaint(paint);\n            }\n\n            const paint1 = ctx => {\n                ctx.globalAlpha = 0.3 * alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n            const paint = ctx => {\n                ctx.globalAlpha = i === 0? 1 : alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\n    }\n\n    render() {\n        const { left, right, top, bottom, scale } = this;\n\n        return(\n            <div id='top-bar' className='top-bar'>\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n            </div>\n        );\n    }\n}\n\nTopBar.propTypes = {};\n\nexport default TopBar;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { openGroupCallPanel } from '../../Actions/Call';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallTopPanel.css';\n\nclass GroupCallTopPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.topBarRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { call, status, connected, animated } = this.state;\n\n        if (nextState.call !== call) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.connected !== connected) {\n            return true;\n        }\n\n        if (nextState.animated !== animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes, type } = update;\n        if (!amplitudes.length) return;\n\n        let max = 0;\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            max = value > max ? value : max;\n        }\n\n        if (type !== 'input') {\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\n        }\n    };\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        }, () => {\n            this.switchButtonState(true);\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.saveMessagesScrollPosition();\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.restoreMessagesScrollPosition(Boolean(call));\n            this.switchButtonState(true);\n        });\n    };\n\n    saveMessagesScrollPosition() {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const prevOffsetHeight = list.offsetHeight;\n            const prevScrollTop = list.scrollTop;\n\n            list.prevOffsetHeight = prevOffsetHeight;\n            list.prevScrollTop = prevScrollTop;\n        });\n    }\n\n    restoreMessagesScrollPosition(openPanel = true) {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const { prevScrollTop, prevOffsetHeight } = list;\n            if (list.scrollTop === prevScrollTop) {\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\n            }\n        });\n    }\n\n    handleMicrophone = async event => {\n        event.stopPropagation();\n\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n                return (\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => { closeSnackbar(snackKey); }}>\n                        <CloseIcon />\n                    </IconButton>\n                )\n            });\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenGroupCall = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        openGroupCallPanel();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { call, status, connected, animated } = this.state;\n        if (!call) return null;\n\n        const { chatId } = call;\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\n\n        return (\n            <div className='group-call-top-panel-wrapper'>\n                { animated ? (\n                    <TopBar ref={this.topBarRef}/>\n                    ) : (\n                    <div className={classNames('group-call-top-panel',\n                        {\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\n                            'group-call-top-panel-connecting': !connected,\n\n                        })}\n                    />\n                )}\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\n                    </IconButton>\n                    <div className='group-call-top-panel-title'>\n                        {title}\n                    </div>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\n                        <CallEndIcon fontSize='small' />\n                    </IconButton>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nGroupCallTopPanel.propTypes = {};\n\nexport default withTranslation()(GroupCallTopPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\n    'Block'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\n    'Phone'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport BlockIcon from '../../Assets/Icons/Block';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport PhoneIcon from '../../Assets/Icons/Phone';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport {\n    canClearHistory,\n    canDeleteChat,\n    getViewInfoTitle,\n    isPrivateChat,\n    getDeleteChatTitle,\n    hasOnePinnedMessage,\n    canSwitchBlocked,\n    getChatSender,\n    canManageVoiceChats,\n    canBeReported, getChatUserId, canBeCalled\n} from '../../Utils/Chat';\nimport { clearHistory, leaveChat, openReportChat } from '../../Actions/Chat';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null\n        };\n    }\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n    };\n\n    handleStartGroupCall = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        showAlert({\n            title: LStore.getString('StartVoipChatTitle'),\n            message: LStore.getString('StartVoipChatAlertText'),\n            ok: LStore.getString('Start'),\n            cancel: LStore.getString('Cancel'),\n            onResult: async result => {\n                if (result){\n                    await CallStore.startGroupCall(chatId);\n                }\n            }\n        })\n    };\n\n    handleStartP2PCall = () => {\n        this.handleMenuClose();\n\n        const userId = getChatUserId(AppStore.getChatId());\n\n        CallStore.p2pStartCall(userId, false);\n    };\n\n    handleReport = () => {\n        this.handleMenuClose();\n\n        const { chatId } = this.props;\n\n        openReportChat(chatId, []);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked, voice_chat_group_call_id } = chat;\n\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n        const manageVoiceChats = canManageVoiceChats(chatId);\n        const reported = canBeReported(chatId);\n        const called = canBeCalled(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    { CallStore.p2pCallsEnabled && called && (\n                        <MenuItem onClick={this.handleStartP2PCall}>\n                            <ListItemIcon>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Call')} />\n                        </MenuItem>\n                    )}\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\n                        <MenuItem onClick={this.handleStartGroupCall}>\n                            <ListItemIcon>\n                                <PhoneIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('StartVoipChat')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                <BlockIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                    {reported && (\n                        <MenuItem onClick={this.handleReport}>\n                            <ListItemIcon>\n                                <ReportOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ReportChat')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true, t);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(HeaderChatSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown, animateOnMount } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown, animateOnMount);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown, animate = true) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = !animate ? '0ms' : '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height, getItemTemplate } = this.props;\n        const { from, to } = this.state;\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    getItemTemplate: PropTypes.func,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number,\n    animateOnMount: PropTypes.bool\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    getItemTemplate: x => x,\n    scrollDown: true,\n    height: 21,\n    animateOnMount: true\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport { canBeReported } from '../../Utils/Chat';\nimport { openReportChat } from '../../Actions/Chat';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        forwardMessages(id, messageIds);\n    };\n\n    handleReport = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        openReportChat(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const items = Array.from(MessageStore.selectedItems.values());\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canReport && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\n                        {t('ReportChat')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.state = {\n            chatId,\n            pinned,\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState()\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    setPinnedState() {\n        const { chatId } = this.state;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({ pinned });\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({\n            chatId,\n            pinned\n        });\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handlePinClick = () => {\n        const { chatId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            pinned,\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <div className='header-right-buttons'>\n                                { pinned.length > 1 && (\n                                    <IconButton\n                                        aria-label='Pins'\n                                        onClick={this.handlePinClick}\n                                        onMouseDown={this.handleMouseDown}>\n                                        <PlaylistEditIcon />\n                                    </IconButton>\n                                )}\n                                <IconButton\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarInviteMembers': {\n                break;\n            }\n        }\n        if (!content) {\n            return null;\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { isBasicGroup } from '../../Utils/BasicGroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        let canCopyPublicMessageLink = false;\n        if(chat.type['@type'] == 'chatTypeSupergroup') {\n            canCopyPublicMessageLink = true\n        }\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews, isCallMessage } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        const isCall = isCallMessage(chatId, messageId);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && !isCall && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_id.user_id) {\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        try {\n            if (showTail) {\n                if (isMeChat(chatId) && forward_info) {\n                    switch (forward_info.origin['@type']) {\n                        case 'messageForwardOriginHiddenUser': {\n                            tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                            break;\n                        }\n                        case 'messageForwardOriginUser': {\n                            tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                            break;\n                        }\n                        case 'messageForwardOriginChannel': {\n                            tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                            break;\n                        }\n                    }\n                } else if (isPrivate) {\n                    tile = <EmptyTile small />\n                } else if (isChannel) {\n                    tile = <EmptyTile small />\n                } else if (is_outgoing) {\n                    tile = <EmptyTile small />\n                } else if (sender.user_id) {\n                    tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n                } else {\n                    tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n                }\n            }\n        } catch(e) {\n            tile = <EmptyTile small />\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport './GroupCallJoinPanelSubtitle.css';\n\nclass GroupCallJoinPanelSubtitle extends React.Component {\n    state = {\n        participantCount: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participantCount } = this.state;\n\n        if (nextState.participantCount !== participantCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            let participantCount = 0;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const { participant_count } = groupCall;\n                participantCount = participant_count;\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                participantCount\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== groupCallId) return;\n\n        let participantCount = 0;\n        const groupCall = CallStore.get(groupCallId);\n        if (groupCall) {\n            const { participant_count } = groupCall;\n            participantCount = participant_count;\n        }\n\n        this.setState({ participantCount });\n    };\n\n    render() {\n        const { t, participantsOnly } = this.props;\n        const { participantCount } = this.state;\n        // console.log('[call][GroupCallPanelSubtitle] render');\n\n        return (\n            <div className='group-call-join-panel-subtitle'>\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\n            </div>\n        );\n    }\n\n}\n\nGroupCallJoinPanelSubtitle.propTypes = {\n    groupCallId: PropTypes.number,\n    participantsOnly: PropTypes.bool\n};\n\nGroupCallJoinPanelSubtitle.defaultProps = {\n    participantsOnly: false\n}\n\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from '../Tile/UserTile';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallRecentParticipants.css';\n\nfunction speakersEquals(lhs, rhs) {\n    if (lhs.length !== rhs.length) return false;\n\n    for (let i = 0; i < lhs.length; i++) {\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\n    }\n\n    return true;\n}\n\nclass GroupCallRecentParticipants extends React.Component {\n    state = {\n        speakers: []\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { speakers } = this.state;\n\n        if (!speakersEquals(nextState.speakers, speakers)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { id } = props;\n        const { prevId } = state;\n\n        if (prevId !== id) {\n            let speakers = [];\n            const groupCall = CallStore.get(id);\n            if (groupCall) {\n                const { recent_speakers } = groupCall;\n                speakers = recent_speakers;\n            }\n\n            return {\n                prevId: id,\n                speakers\n            };\n        }\n\n        return null;\n    }\n\n    loadContent(speakers) {\n        const store = FileStore.getStore();\n        loadUsersContent(store, speakers.map(x => x.user_id));\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.speakers);\n\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { id } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== id) return;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        clearTimeout(this.timeout);\n        if (!speakers.length) {\n            this.setState({ speakers: [] });\n        } else {\n            this.loadContent(speakers);\n\n            this.timeout = setTimeout(() => {\n                this.updateSpeakers();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        }\n    };\n\n    updateSpeakers() {\n        const { id } = this.props;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        this.setState({ speakers });\n    }\n\n    render() {\n        const { speakers } = this.state;\n        if (!speakers) return null;\n        if (!speakers.length) return null;\n\n        return (\n            <div className='group-call-recent-participants'>\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallRecentParticipants.propTypes = {\n    id: PropTypes.number\n};\n\nexport default GroupCallRecentParticipants;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './GroupCallJoinPanel.css';\n\nclass GroupCallJoinPanel extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n\n            let groupCallId = 0;\n            if (chat) {\n                const { voice_chat_group_call_id } = chat;\n                groupCallId = voice_chat_group_call_id;\n            }\n\n            const { currentGroupCall } = CallStore;\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\n\n            return {\n                prevChatId: chatId,\n                groupCallId,\n                isCurrent\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { isCurrent, groupCallId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.groupCallId !== groupCallId) {\n            return true;\n        }\n\n        if (nextState.isCurrent !== isCurrent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    handleUpdateChatVoiceChat = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if ( chatId !== chat_id) return;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n\n        this.setState({\n            groupCallId: voice_chat_group_call_id\n        });\n    }\n\n    handleUpdateGroupCall = update => {\n        const { group_call } = update;\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\n\n        this.setState({\n            groupCallId: group_call ? group_call.id : 0\n        });\n    };\n\n    handleClientUpdateGroupCall = update => {\n        const { chatId } = this.props;\n\n        const { currentGroupCall } = CallStore;\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\n\n        this.setState({ isCurrent });\n    };\n\n    handleJoin = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { voice_chat_group_call_id } = chat;\n        const groupCall = CallStore.get(voice_chat_group_call_id);\n        console.log('[call] handleJoin', groupCall);\n        if (groupCall && groupCall.is_joined) return;\n\n        const muted = true;\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const { groupCallId, isCurrent } = this.state;\n        if (!groupCallId) return null;\n        if (isCurrent) return null;\n\n        return (\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\n                <div className='group-call-join-panel-content'>\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\n                </div>\n                <GroupCallRecentParticipants id={groupCallId}/>\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\n                    {t('VoipChatJoin')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nGroupCallJoinPanel.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallJoinPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport User from '../Tile/User';\nimport ChatStore from '../../Stores/ChatStore';\nimport './InputBoxHints.css'\n\nclass InputBoxHints extends React.Component {\n    state = {\n        local: [],\n        global: [],\n        id: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { local, global, id } = this.state;\n\n        if (nextState.local !== local) {\n            return true;\n        }\n\n        if (nextState.global !== global) {\n            return true;\n        }\n\n        if (nextState.id !== id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    onClientUpdateHintsClose = update => {\n        this.setState({\n            id: null,\n            local: [],\n            global: []\n        });\n    };\n\n    onClientUpdateHintsGlobal = update => {\n        const { id, global } = update;\n        if (this.state.id !== id) return;\n\n        this.setState({\n            id,\n            global\n        });\n    };\n\n    onClientUpdateHintsLocal = update => {\n        const { id, local } = update;\n\n        this.setState({\n            id,\n            local,\n            global: []\n        });\n    };\n\n    render() {\n        const { local, global } = this.state;\n\n        const results = (local || []).concat(global || []);\n\n        // console.log('[hints] render', local, global, results);\n        if (!results.length) return null;\n\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n            </div>\n        );\n    }\n\n}\n\nInputBoxHints.propTypes = {};\n\nexport default InputBoxHints;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender_id, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender_id.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender_id, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender_id, via_bot_user_id } = message;\n                let userId = sender_id.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_id.user_id) {\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n        const showMeta = withBubble && content['@type'] !== 'messageCall';\n\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {showMeta && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\nimport Badge from '@material-ui/core/Badge';\nimport ChatStore from '../../Stores/ChatStore';\nimport { getChatUnreadCount } from '../../Utils/Chat';\n\nclass ScrollDownButton extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            chatId,\n            chatList\n        } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n  \n    onUpdate = update => {\n        const { chatId } = this.props;\n  \n        if (update.chat_id !== chatId) return;\n  \n        this.forceUpdate();\n    };\n\n\n    render() {\n        const { onClick } = this.props;\n        const { chatId } = this.props;\n\n        const unreadCount = getChatUnreadCount(chatId);\n\n        return (\n            <div className='scroll-down-button'>\n                <Badge badgeContent={unreadCount || 0} color=\"primary\" overlap=\"circle\">\n                    <IconButton disableRipple={true} onMouseDown={onClick}>\n                      <ArrowDownwardIcon />\n                    </IconButton>\n                </Badge>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        const { prevScrollTop, prevOffsetHeight } = this;\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_id, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender_id, prevMessage.sender_id) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <div className='messages-list-top-panel'>\n                    <GroupCallJoinPanel chatId={chatId}/>\n                    <ActionBar chatId={chatId} />\n                </div>\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} chatId={chatId}/>\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <GroupCallTopPanel/>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        messageIds.sort();\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BlobDrawable, {\n    AMPLITUDE_SPEED,\n    FORM_BIG_MAX,\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\n    SCALE_BIG,\n    SCALE_BIG_MIN,\n    SCALE_SMALL,\n    SCALE_SMALL_MIN\n} from './BlobDrawable';\nimport {\n    MUTE_BUTTON_STATE_CONNECTING,\n    MUTE_BUTTON_STATE_MUTE,\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\n    MUTE_BUTTON_STATE_UNMUTE\n} from './TopBar';\nimport { stopPropagation } from '../../Utils/Message';\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\nclass OvershootInterpolator {\n    constructor(tension) {\n        this.mTension = tension;\n    }\n\n    getInterpolation(t) {\n        // _o(t) = t * t * ((tension + 1) * t + tension)\n        // o(t) = _o(t - 1) + 1\n        t -= 1.0;\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\n    }\n}\n\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\nclass DecelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n    }\n\n    getInterpolation(input) {\n        let result;\n        if (this.mFactor === 1.0) {\n            result = 1.0 - (1.0 - input) * (1.0 - input);\n        } else {\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\n        }\n        return result;\n    }\n}\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\nclass AccelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n        this.mDoubleFactor = 2 * this.mFactor;\n    }\n\n    getInterpolation(input) {\n        if (this.mFactor === 1.0) {\n            return input * input;\n        }\n\n        return Math.pow(input, this.mDoubleFactor);\n    }\n}\n\nclass WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    update(top, left, size, dt) {\n        // TODO: move gradient here\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\n\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.3, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#77E55C');\n            gradient.addColorStop(1, '#56C7FE');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#66D4FB');\n            gradient.addColorStop(1, '#539EF8');\n\n            return gradient;\n        } else {\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\n\n            gradient.addColorStop(0, '#2B333E');\n            gradient.addColorStop(1, '#2B333E');\n\n            return gradient;\n        }\n    }\n}\n\nclass RadialProgressView {\n    constructor() {\n        this.decelerateInterpolator = new DecelerateInterpolator();\n        this.accelerateInterpolator = new AccelerateInterpolator();\n\n        this.lineCap = 'round';\n        this.lineWidth = 3;\n        this.progressColor = '#1C93E3';\n        this.updateProgressPaint();\n\n        this.lastUpdateTime = 0;\n        this.radOffset = 0;\n        this.currentCircleLength = 0;\n        this.risingCircleLength = false;\n        this.currentProgressTime = 0;\n        this.useSelfAlpha = false;\n        this.drawingCircleLength = 0;\n\n        this.rotationTime = 2000;\n        this.risingTime = 500;\n        this.size = 0;\n\n        this.currentProgress = 0;\n        this.progressAnimationStart = 0;\n        this.progressTime = 0;\n        this.animatedProgress = 0;\n        this.circle = false;\n        this.circleProgress = 0;\n        this.noProgress = true;\n    }\n\n    setUseSelfAlpha = value => {\n        this.useSelfAlpha = value;\n    };\n\n    setAlpha = alpha => {\n        console.log('[rpv] setAlpha', alpha);\n    };\n\n    setNoProgress = value => {\n        this.noProgress = value;\n    };\n\n    setProgress = value => {\n        this.currentProgress = value;\n        if (this.animatedProgress > value) {\n            this.animatedProgress = value;\n        }\n\n        this.progressAnimationStart = this.animatedProgress;\n        this.progressTime = 0;\n    };\n\n    updateAnimation = () => {\n        const newTime = new Date();\n        let dt = newTime - this.lastUpdateTime;\n        if (dt > 17) {\n            dt = 17;\n        }\n        this.lastUpdateTime = newTime;\n\n        this.radOffset += 360 * dt / this.rotationTime;\n        let count = Math.trunc(this.radOffset / 360);\n        this.radOffset -= count * 360;\n\n        if (this.circle && this.circleProgress !== 1.0) {\n            this.circleProgress += 16 / 220;\n            if (this.circleProgress > 1.0) {\n                this.circleProgress = 1.0;\n            }\n        } else if (!this.circle && this.circleProgress !== 0.0) {\n            this.circleProgress -= 16 / 400;\n            if (this.circleProgress < 0) {\n                this.circleProgress = 0;\n            }\n        }\n\n        if (this.noProgress) {\n            if (this.circleProgress === 0) {\n                this.currentProgressTime += dt;\n                if (this.currentProgressTime >= this.risingTime) {\n                    this.currentProgressTime = this.risingTime;\n                }\n                if (this.risingCircleLength) {\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                } else {\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                }\n\n                if (this.currentProgressTime === this.risingTime) {\n                    if (this.risingCircleLength) {\n                        this.radOffset += 270;\n                        this.currentCircleLength = -266;\n                    }\n\n                    this.risingCircleLength = !this.risingCircleLength;\n                    this.currentProgressTime = 0;\n                }\n            } else {\n                if (this.risingCircleLength) {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                    this.currentCircleLength += 360 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                } else {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                    this.currentCircleLength -= 364 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                }\n            }\n        }\n        else {\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\n            if (progressDiff > 0) {\n                progressDiff += dt;\n                if (this.progressTime >= 200) {\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\n                    this.progressTime = 0;\n                } else {\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\n                }\n            }\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\n        }\n    };\n\n    setSize = size => {\n        this.size = size;\n    };\n\n    setStrokeWidth = value => {\n        this.lineWidth = value;\n        this.updateProgressPaint();\n    };\n\n    setProgressColor = color => {\n        this.progressColor = color;\n        this.updateProgressPaint();\n    };\n\n    updateProgressPaint() {\n        this.progressPaint = ctx => {\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineWidth) {\n                ctx.lineWidth = this.lineWidth;\n            }\n            if (this.progressColor) {\n                ctx.strokeStyle = this.progressColor;\n            }\n        };\n    }\n\n    toCircle = (toCircle, animated) => {\n        this.circle = toCircle;\n        if (!animated) {\n            this.circleProgress = this.circle ? 1.0 : 0.0;\n        }\n    }\n\n    draw = (canvas, cx, cy, scale = 1) => {\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(cx, cy);\n            ctx.scale(scale, scale);\n            ctx.beginPath();\n            if (!this.risingCircleLength) {\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\n                    this.currentCircleLength = 0;\n                }\n            }\n\n            const radStart = this.radOffset * Math.PI / 180;\n            this.drawingCircleLength = this.currentCircleLength;\n            const radLength = this.drawingCircleLength * Math.PI / 180;\n\n\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\n            this.progressPaint(ctx);\n            ctx.stroke();\n            ctx.restore();\n\n            this.updateAnimation();\n        }\n    }\n\n    isCircle = () => {\n        return Math.abs(this.drawingCircleLength) >= 360;\n    }\n}\n\nclass Button extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.radialPaint = ctx => { };\n        this.paint = ctx => { };\n        this.paintTmp = ctx => { };\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.switchProgress = 1.0;\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\n        this.prevState = null;\n        this.currentState = this.states[this.muteButtonState];\n        this.progressToState = 1.0;\n\n        this.showLightingProgress = 1.0;\n        this.showWavesProgress = 1.0;\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\n        this.colorsTmp = new Array(3);\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n\n        this.buttonDefaultRadius = 57;\n        this.buttonRadius = 52;\n        this.strokeWidth = 4;\n        this.invalidateColors = true;\n        this.radialProgressView = new RadialProgressView();\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\n        this.radialProgressView.setProgressColor('#28BAFF');\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n\n        this.canvas = document.getElementById('button-canvas');\n        this.tinyWaveDrawable = new BlobDrawable(9);\n        this.bigWaveDrawable = new BlobDrawable(12);\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.generateInitBlob();\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.generateInitBlob();\n\n        const color = '#66D4FB';\n        this.radialGradient = ctx => {\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\n            gradient.addColorStop(0, color + '32');\n            gradient.addColorStop(1, color + '00');\n\n            ctx.fillStyle = gradient;\n        };\n        this.radialPaint = this.radialGradient;\n\n        this.setAmplitude(this.amplitude);\n\n        // console.log('[button] componentDidMount draw');\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n        this.forceUpdate();\n    }\n\n    fillColors(stateId, colorsToSet) {\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\n            colorsToSet[0] = '#66D4FB';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\n            colorsToSet[0] = '#7DDCAA';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            colorsToSet[0] = '#766EE9';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else {\n            colorsToSet[0] = '#1C2229';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        }\n    }\n\n    strToHex(n) {\n        let s = n.toString(16);\n        if (s.length === 1) {\n            s = '0' + s;\n        }\n        return s;\n    }\n\n    blendARGB(color1, color2, ratio) {\n        if (color1.length <= 7) {\n            color1 += 'FF';\n        }\n        if (color2.length <= 7) {\n            color2 += 'FF';\n        }\n        const c1 = {\n            r: parseInt(color1.substr(1, 2), 16),\n            g: parseInt(color1.substr(3, 2), 16),\n            b: parseInt(color1.substr(5, 2), 16),\n            a: parseInt(color1.substr(7, 2), 16),\n        };\n        const c2 = {\n            r: parseInt(color2.substr(1, 2), 16),\n            g: parseInt(color2.substr(3, 2), 16),\n            b: parseInt(color2.substr(5, 2), 16),\n            a: parseInt(color2.substr(7, 2), 16),\n        };\n\n        const inverseRatio = 1 - ratio;\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\n\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        if (!this.focused && this.switchProgress >= 1.0) {\n            return;\n        }\n        // console.log('[button] draw', [this.focused, this.mounted]);\n        const { currentState, prevState, left, top, right, bottom } = this;\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        let canSwitchProgress = true;\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, true);\n            if (!this.radialProgressView.isCircle()) {\n                canSwitchProgress = false;\n            }\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, false);\n        }\n\n        if (canSwitchProgress) {\n            if (this.switchProgress !== 1) {\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.switchProgress += dt / 100;\n                } else {\n                    this.switchProgress += dt / 180;\n                }\n\n                if (this.switchProgress >= 1.0) {\n                    this.switchProgress = 1.0;\n                    this.prevState = null;\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        this.radialProgressView.toCircle(false, true);\n                    }\n                }\n                this.invalidateColors = true;\n            }\n\n            if (this.invalidateColors && currentState) {\n                this.invalidateColors = false;\n                let lightingColor;\n                if (prevState) {\n                    this.fillColors(prevState.stateId, this.colorsTmp);\n                    const oldLight = this.colorsTmp[0];\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    const newLight = this.colorsTmp[0];\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\n                } else {\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    lightingColor = this.colorsTmp[0];\n                }\n                if (this.currentLightColor !== lightingColor) {\n                    this.radialGradient = ctx => {\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\n\n                        gradient.addColorStop(0, lightingColor + '3C');\n                        gradient.addColorStop(1, lightingColor + '00');\n\n                        ctx.fillStyle = gradient;\n                    };\n                    this.currentLightColor = lightingColor;\n                }\n            }\n\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\n            }\n\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                this.showWavesProgress -= dt / 180;\n                if (this.showWavesProgress < 0) {\n                    this.showWavesProgress = 0;\n                }\n            } else {\n                if (showWaves && this.showWavesProgress !== 1) {\n                    this.showWavesProgress += dt / 350;\n                    if (this.showWavesProgress > 1) {\n                        this.showWavesProgress = 1;\n                    }\n                } else if (!showWaves && this.showWavesProgress !== 0) {\n                    this.showWavesProgress -= dt / 350;\n                    if (this.showWavesProgress < 0) {\n                        this.showWavesProgress = 0;\n                    }\n                }\n            }\n\n            if (showLighting && this.showLightingProgress !== 1) {\n                this.showLightingProgress += dt / 350;\n                if (this.showLightingProgress > 1) {\n                    this.showLightingProgress = 1;\n                }\n            } else if (!showLighting && this.showLightingProgress !== 0) {\n                this.showLightingProgress -= dt / 350;\n                if (this.showLightingProgress < 0) {\n                    this.showLightingProgress = 0;\n                }\n            }\n        }\n\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\n\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.resetTransform();\n\n        const cx = this.cx;\n        const cy = this.cy;\n\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\n            let progress;\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                progress = this.switchProgress;\n                this.paint = prevState.shader;\n            } else {\n                progress = 1.0 - this.switchProgress;\n                this.paint = currentState.shader;\n            }\n\n            this.paintTmp = ctx => {\n                ctx.fillStyle = '#2B333E';\n            }\n\n            let paint = ctx => {\n                this.paint(ctx, left, top, right, bottom);\n            };\n\n            ctx.globalAlpha = 1.0;\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n\n            ctx.globalAlpha = 0.3;\n            // big wave\n            ctx.save();\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n            ctx.restore();\n\n            // small wave\n            ctx.save();\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n            ctx.restore();\n\n            ctx.globalAlpha = 1.0;\n            if (canSwitchProgress) {\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                paint = ctx => {\n                    ctx.fillStyle = '#28BAFF';\n                };\n                if (progress !== 0) {\n                    ctx.globalAlpha = progress;\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                }\n            }\n            ctx.globalAlpha = 1.0;\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\n            if  (!canSwitchProgress) {\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n            }\n            ctx.restore();\n        } else {\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                ctx.globalAlpha = 1.0;\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n                if (i === 1) {\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n                }\n\n                ctx.globalAlpha = 0.3 * alpha;\n                // big wave\n                ctx.save();\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n                ctx.restore();\n\n                // small wave\n                ctx.save();\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n                ctx.restore();\n            }\n\n            // button\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                if (i === 0) {\n                    ctx.globalAlpha = 1.0;\n                } else {\n                    ctx.globalAlpha = alpha;\n                }\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\n\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n                }\n            }\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(cx, cy);\n        ctx.scale(scale, scale);\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        paint && paint(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    updateMuteButton = (stateId, animated) => {\n        const { muteButtonState } = this;\n        if (muteButtonState === stateId && animated) {\n            return;\n        }\n\n        // TODO: add text animation\n\n        if (animated) {\n            this.muteButtonState = stateId;\n        } else {\n            this.muteButtonState = stateId;\n        }\n        this.updateMuteButtonState(animated);\n    }\n\n    updateMuteButtonState (animated) {\n        const { states, currentState, muteButtonState } = this;\n\n        if (states[muteButtonState] !== currentState) {\n            this.prevState = currentState;\n            this.currentState = states[muteButtonState];\n            if (!this.prevState || !animated) {\n                this.switchProgress = 1.0;\n                this.prevState = null;\n            } else {\n                this.switchProgress = 0.0;\n            }\n        }\n\n        if (!animated) {\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\n            }\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\n        }\n    }\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\n    }\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    }\n\n    render() {\n        const { children, onClick } = this.props;\n        const { left, right, top, bottom, scale } = this;\n\n        return (\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-28px)' }}>\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n                <div style={{\n                    position: 'absolute',\n                    background: 'transparent',\n                    width: 104,\n                    height: 104,\n                    borderRadius: '50%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    left: '50%',\n                    top: '50%',\n                    marginLeft: -52,\n                    marginTop: -38,\n                    cursor: 'pointer'\n                }}\n                     onMouseDown={stopPropagation}\n                     onClick={onClick}>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nButton.propTypes = {};\n\nexport default Button;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\nimport './GroupCallMicButtonHint.css';\n\nclass GroupCallMicButtonHint extends React.Component {\n\n    getItemTemplate = item => {\n        const { t } = this.props;\n\n        let title = '';\n        let subtitle = '';\n        switch (item) {\n            case 'muted': {\n                title = t('VoipGroupUnmute');\n                subtitle = t('VoipHoldAndTalk');\n                break;\n            }\n            case 'unmuted': {\n                title = t('VoipTapToMute');\n                break;\n            }\n            case 'forceMuted': {\n                title = t('VoipMutedByAdmin');\n                subtitle = t('VoipMutedByAdminInfo');\n                break;\n            }\n            case 'connecting': {\n                title = t('Connecting');\n                break;\n            }\n        }\n\n        return (\n            <div className='group-call-mic-button-hint-item'>\n                <div className='group-call-mic-button-hint-title'>{title}</div>\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\n            </div>\n        );\n    }\n\n    render() {\n        const { className, status } = this.props;\n\n        return (\n            <div className={classNames('group-call-mic-button-hint', className)}>\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\n            </div>\n        );\n    }\n}\n\nGroupCallMicButtonHint.propTypes = {\n    status: PropTypes.string\n};\n\nexport default withTranslation()(GroupCallMicButtonHint);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from './Button';\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallMicButton.css';\n\nclass GroupCallMicButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.buttonRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected, animated, shook } = this.state;\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (shook !== nextState.shook) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes } = update;\n        if (!amplitudes.length) return;\n\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            if (type === 'input') {\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\n                return;\n            }\n        }\n    };\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id, is_muted } = participant\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    };\n\n    handleClick = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            const { shook } = this.state;\n            if (shook) {\n                this.setState({\n                    shook: false\n                }, () => {\n                    requestAnimationFrame(() => {\n                        this.setState({ shook: true });\n                    })\n                });\n            } else {\n                this.setState({\n                    shook: true\n                });\n            }\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    render() {\n        const { status, connected, animated, shook } = this.state;\n        // console.log('[call][GroupCallMicButton] render');\n\n        return (\n            <div className='group-call-mic-button-wrapper' >\n                {animated ? (\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </Button>\n                ) : (\n                    <div className={classNames('group-call-mic-button',\n                        {\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-unmuted': connected && status === 'unmuted',\n                            'group-call-connecting': !connected,\n                        })}\n                         onClick={this.handleClick}\n                    >\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </div>\n                )}\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\n            </div>\n        )\n    }\n}\n\nGroupCallMicButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallMicButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getCallStatus } from '../../Calls/Utils';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallPanelButtons.css'\n\nclass GroupCallPanelButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected } = this.state;\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        });\n    };\n\n    render() {\n        const { children } = this.props;\n        const { status, connected } = this.state;\n        // console.log('[call][GroupCallPanelButtons] render');\n\n        return (\n            <div className={classNames('group-call-panel-buttons', {\n                'group-call-connecting': !connected,\n                'group-call-muted': connected && status === 'muted',\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\n                'group-call-unmuted': connected && status === 'unmuted',\n            })}>\n                {children}\n            </div>\n        );\n    }\n}\n\nGroupCallPanelButtons.propTypes = {};\n\nexport default GroupCallPanelButtons;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\n    'MicOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\n    'MicOffOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport MicIcon from '../../Assets/Icons/MicOutlined';\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\nimport UserTile from '../Tile/UserTile';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getUserFullName } from '../../Utils/User';\nimport { openUser } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallParticipant.css';\n\nclass GroupCallParticipant extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        participant: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, groupCallId } = props;\n        const { prevUserId, prevGroupCallId } = state;\n\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\n            const participants = CallStore.participants.get(groupCallId) || new Map();\n            const participant = participants.get(userId);\n\n            return {\n                prevUserId: userId,\n                prevGroupCallId: groupCallId,\n                participant\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participant, left, top, contextMenu } = this.state;\n\n        if (participant !== nextState.participant) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId, userId } = this.props;\n        const { group_call_id, participant } = update;\n        if (groupCallId !== group_call_id) return;\n        if (!participant) return;\n\n        const { user_id } = participant;\n        if (userId !== user_id) return;\n\n        this.setState({\n            participant\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleOpenProfile = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, true);\n        closeGroupCallPanel();\n    };\n\n    handleSendMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, false);\n        closeGroupCallPanel();\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, true);\n    };\n\n    handleUnmute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, false);\n    };\n\n    render() {\n        const { userId, t } = this.props;\n        const { contextMenu, left, top, participant } = this.state;\n        // console.log('[call][GroupCallParticipant] render', participant);\n        if (!participant) return null;\n\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\n\n        return (\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\n                <UserTile userId={userId}/>\n                <div className='group-call-participant-content'>\n                    <div className='group-call-participant-content-title'>\n                        {/*{userId}*/}\n                        {getUserFullName(userId)}\n                    </div>\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\n                        {/*{order}*/}\n                        {is_speaking ? t('Speaking') : t('Listening')}\n                    </div>\n                </div>\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\n                </div>\n\n                <Popover\n                    classes={{\n                        paper: 'group-call-participant-menu-root'\n                    }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        { can_be_unmuted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleUnmute}>\n                                <ListItemText primary={t('VoipGroupUnmute')} />\n                            </MenuItem>\n                        )}\n                        { can_be_muted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleMute}>\n                                <ListItemText primary={t('VoipGroupMute')} />\n                            </MenuItem>\n                        )}\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleOpenProfile}>\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\n                        </MenuItem>\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleSendMessage}>\n                            <ListItemText primary={t('SendMessage')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n\n}\n\nGroupCallParticipant.propTypes = {\n    userId: PropTypes.number,\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipant);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport GroupCallParticipant from './GroupCallParticipant';\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\nimport { canManageVoiceChats } from '../../Utils/Chat';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallParticipants.css';\n\nclass GroupCallParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            participants: []\n        };\n\n        this.participantsMap = new Map();\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n            return {\n                prevGroupCallId: groupCallId,\n                participants: participants.map(x => x.user_id)\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participants } = this.state;\n        if (!albumHistoryEquals(participants, nextState.participants)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.preloadContent();\n\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId } = this.props;\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        if (group_call_id !== groupCallId) return;\n\n        const { order, user_id } = participant;\n        if (order !== '0') {\n            this.participantsMap.set(user_id, user_id);\n            this.loadContent();\n\n            // wait for profile photo\n            setTimeout(() => {\n                this.updateParticipants();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        } else {\n            this.updateParticipants();\n        }\n    };\n\n    updateParticipants() {\n        const { groupCallId } = this.props;\n\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n        this.setState({\n            participants: participants.map(x => x.user_id)\n        });\n    }\n\n    preloadContent = () => {\n        const { participants } = this.state;\n        if (!participants) return;\n        if (!participants.length) return;\n\n        participants.forEach(x => {\n            this.participantsMap.set(x, x);\n        });\n        this.loadContent();\n    };\n\n    loadContent = () => {\n        const { participantsMap } = this;\n        if (!participantsMap) return;\n        if (!participantsMap.size) return;\n\n        this.participantsMap = new Map();\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, Array.from(participantsMap.keys()));\n    }\n\n    render() {\n        const { t, groupCallId } = this.props;\n        const { participants } = this.state;\n        // console.log('[call][GroupCallParticipants] render');\n\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        const manageGroupCalls = canManageVoiceChats(chatId);\n\n        return (\n            <div className='group-call-participants'>\n                { manageGroupCalls && (\n                    <div className='group-call-participants-invite'>\n                        <AddMemberIcon/>\n                        <div className='group-call-participants-invite-text'>\n                            {t('VoipGroupInviteMember')}\n                        </div>\n                    </div>\n                )}\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallParticipants.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipants);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\n    'Tune'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TuneIcon from '../../Assets/Icons/Tune';\nimport { stopPropagation } from '../../Utils/Message';\nimport './GroupCallSettingsButton.css';\n\nclass GroupCallSettingsButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\n                <TuneIcon />\n            </div>\n        );\n    }\n}\n\nGroupCallSettingsButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default GroupCallSettingsButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicButton from './GroupCallMicButton';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\nimport GroupCallParticipants from './GroupCallParticipants';\nimport GroupCallSettings from './GroupCallSettings';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallPanel.css';\n\nclass GroupCallPanel extends React.Component {\n    state = {\n        openSettings: false\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenSettings = async event => {\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    render() {\n        const { groupCallId, t } = this.props;\n        const { openSettings } = this.state;\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        return (\n            <div className='group-call-panel'>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\n                    </div>\n                    <div style={{ width: 48 }}/>\n                </div>\n                <div className='group-call-panel-participants scrollbars-hidden'>\n                    <GroupCallParticipants groupCallId={groupCallId}/>\n                </div>\n                <GroupCallPanelButtons>\n                    <GroupCallMicButton/>\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('Leave')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nGroupCallPanel.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GroupCallPanel from './GroupCallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass GroupCall extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('group-call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('group-call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('group-call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('group-call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('group-call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { groupCallId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='group-call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <GroupCallPanel groupCallId={groupCallId}/>\n            </div>\n        )\n    }\n}\n\nGroupCall.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default GroupCall;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender_id } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender_id.user_id ? <UserTile userId={sender_id.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender_id} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport Actions from './Actions';\nimport Call from './Calls/Call';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport GroupCall from './Calls/GroupCall';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport PipPlayer from './Player/PipPlayer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport CallStore from '../Stores/CallStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            groupCallId: 0,\n            callId: 0\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.on('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.off('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdateCallPanel = update => {\n        const { opened, callId } = update;\n\n        this.setState({\n            callId: opened ? callId : 0\n        });\n    };\n\n    onClientUpdateGroupCallPanel = update => {\n        const { opened } = update;\n        const { currentGroupCall } = CallStore;\n\n        this.setState({\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            callId,\n            groupCallId,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {Boolean(instantViewContent) && <InstantViewer {...instantViewContent} />}\n                {Boolean(mediaViewerContent) && <MediaViewer {...mediaViewerContent} />}\n                {Boolean(profileMediaViewerContent) && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {Boolean(forwardInfo) && <ForwardDialog {...forwardInfo} />}\n                {Boolean(videoInfo) && <PipPlayer {...videoInfo}/>}\n                {Boolean(groupCallId) && <GroupCall groupCallId={groupCallId}/>}\n                {Boolean(callId) && <Call callId={callId}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}